unit UfrmVikings;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.ExtCtrls;

type
  TGame = class(TForm)
    Player: TShape;
    enemy1: TShape;
    enemy2: TShape;
    enemy3: TShape;
    enemy4: TShape;
    enemy5: TShape;
    Panel1: TPanel;
    enemy6: TShape;
    Timer1: TTimer;
    procedure KeyDownExec;
    procedure Timer1Timer(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure enemy1fallexecute(starttime: integer);
  private
    enemy1fall, enemy2fall, enemy3fall, enemy4fall,enemy5fall ,enemy6fall: boolean;
    one, two, three, four, five, six: integer;
  public
    { Public-Deklarationen }
  end;

var
  Game: TGame;

implementation

{$R *.dfm}

procedure TGame.enemy1fallexecute(starttime: integer);
begin
    if enemy1.Top > 600 then
    begin
        enemy1fall := false;

    end;

    if Timer1.Interval >= starttime then
    begin
        enemy1.Top := enemy1.Top + 5;
        game.Update;
    end;

end;

procedure TGame.FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
begin
    KeyDownExec;
end;

procedure Delay(ms : Integer);
var
  T: Integer;
begin
    T := GetTickCount + ms;
    while GetTickCount < T do
        Application.ProcessMessages;
end;
procedure TGame.KeyDownExec;
var exec1: boolean;
begin

    exec1:= false;
    delay(1);
    if (GetAsyncKeystate(VK_Left))<>0  then
        if Player.Left >= 3 then
        begin
            Player.Left:= Player.Left -5;

            exec1:= true;
        end;

    if (GetAsyncKeystate(VK_Right))<>0 then
        if Player.Left <= 357 then
    begin
      Player.Left:= Player.Left +5;

      exec1:= true;
    end;
    if (GetAsyncKeystate(VK_UP))<>0 then
        if Player.top >= 4 then
    begin
      Player.Top:= Player.Top -5;


      exec1:= true;

    end;
    if (GetAsyncKeystate(VK_down))<>0 then
        if Player.Top <= 505 then
    begin
      Player.Top:= Player.Top +5;

      exec1:= true;

    end;
    Game.Update;
    if exec1 then
        KeyDownExec;
end;



procedure TGame.Timer1Timer(Sender: TObject);
var
    Overlay: TRect;

begin
    if IntersectRect(Overlay ,enemy1.BoundsRect,player.BoundsRect) or IntersectRect(Overlay ,enemy2.BoundsRect,player.BoundsRect) or IntersectRect(Overlay ,enemy3.BoundsRect,player.BoundsRect) or IntersectRect(Overlay ,enemy4.BoundsRect,player.BoundsRect) or IntersectRect(Overlay ,enemy5.BoundsRect,player.BoundsRect) or IntersectRect(Overlay ,enemy6.BoundsRect,player.BoundsRect) then
    begin
        Timer1.Enabled := false;
        ShowMessage('Game Over');
    end;


    if not enemy1fall then
    begin
        enemy1.Top := -50;
        enemy1fall := true;
        one := timer1.Interval + (random(6) * 1000);

        enemy1fallexecute(one);
    end else
    begin
        enemy1fallexecute(one);

    end;






    KeyDownExec;
    game.Update;







end;

end.
